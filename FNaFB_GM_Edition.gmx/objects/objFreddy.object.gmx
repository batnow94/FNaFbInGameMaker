<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFreddy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
anim=0;
udlri=4;
pudlr=1;
move=1;
dspeed=2;
mspeed=2;
onstage=1;
tped=0;
avatar=0;
moved=0;
transattack=0;
steps=0;

//&lt; &gt;Stats and Inventory System

hth=180;    //Health
mxhth=180;  //Max Health
skl=120;    //Skill
mxskl=120;  //Max Skill
atk=1;      //Attack
def=1;      //Defence
eff="none"; //Effect
lvl=1       //Level
xp=0        //XP
// XP level boundaries                                                                                \\
// 1  2   3   4   5   6   7   8   9   10   11   12   13    14    15    16     17    18    19    20    ||
// 90                                                                                                 //

items=ds_list_create();itemq=ds_list_create();    //Consumables
    ds_list_add(items,"spizza");
    ds_list_add(itemq,1);
hands=ds_list_create();handq=ds_list_create();    //Weapons
    //Player starts with no hands
parts=ds_list_create();partq=ds_list_create();    //Armor
    //Player starts with no parts
keys=ds_list_create();keyq=ds_list_create();      //Key items
    //Player starts with no keys

equ=ds_list_create();   //Equipped items
    ds_list_add(equ,"cmic","none","ha","ba","none");
    //               hand  shield head body fuel
skills=ds_list_create();//Character skills
    //Player starts with no skills
//&lt;/&gt;Stats and Inventory System

//Say arr you ready for freddy.
talking=1;
say="1";
saydelay=20;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ridiculous script to map sounds to an array
sndfreddy[1]=sndfreddy1;
sndfreddy[2]=sndfreddy2;
sndfreddy[3]=sndfreddy3;
sndfreddy[4]=sndfreddy4;
sndfreddy[5]=sndfreddy5;
sndfreddy[6]=sndfreddy6;
sndfreddy[7]=sndfreddy7;
sndfreddy[8]=sndfreddy8;
sndfreddy[9]=sndfreddy9;
sndfreddy[10]=sndfreddy10;
sndfreddy[11]=sndfreddy11;
sndfreddy[12]=sndfreddy12;
sndfreddy[13]=sndfreddy13;
sndfreddy[14]=sndfreddy14;
sndfreddy[15]=sndfreddy15;
sndfreddy[16]=sndfreddy16;
sndfreddy[17]=sndfreddy17;
sndfreddy[18]=sndfreddy18;
sndfreddy[19]=sndfreddy19;
sndfreddy[20]=sndfreddy20;
sndfreddy[21]=sndfreddy21;
sndfreddy[22]=sndfreddy22;
sndfreddy[23]=sndfreddy23;
sndfreddy[24]=sndfreddy24;
sndfreddy[25]=sndfreddy25;
sndfreddy[26]=sndfreddy26;
sndfreddy[27]=sndfreddy27;
sndfreddy[28]=sndfreddy28;
sndfreddy[29]=sndfreddy29;
sndfreddy[31]=sndfreddy31;
sndfreddy[32]=sndfreddy32;
sndfreddy[33]=sndfreddy33;
sndfreddy[34]=sndfreddy34;
sndfreddy[35]=sndfreddy35;
sndfreddy[36]=sndfreddy36;
sndfreddy[37]=sndfreddy37;
sndfreddy[38]=sndfreddy38;
sndfreddy[39]=sndfreddy39;
sndfreddy[40]=sndfreddy40;
sndfreddy[41]=sndfreddy41;
sndfreddy[42]=sndfreddy42;
sndfreddy[43]=sndfreddy43;
sndfreddy[44]=sndfreddy44;
sndfreddy[45]=sndfreddy45;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean up
ds_list_destroy(items);
ds_list_destroy(itemq);
ds_list_destroy(hands);
ds_list_destroy(handq);
ds_list_destroy(parts);
ds_list_destroy(partq);
ds_list_destroy(keys);
ds_list_destroy(keyq);
ds_list_destroy(equ);
ds_list_destroy(skills);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Controls
if talking {
    move=0;
}
if instance_position(x,y,objDoor) &amp;&amp; !tped &amp;&amp; move {
    with instance_nearest(x,y,objDoor) {
        room_goto(rm);
        objFreddy.x=rmx;
        objFreddy.y=rmy;
        ctrlGame.rmpower=rmpower;
        ctrlGame.rmindex=rmindex;
    }
    move=0;
    tped=1;
}
if instance_position(x,y,objBathDoor) &amp;&amp; !tped &amp;&amp; move {
    with instance_nearest(x,y,objBathDoor) {
        objFreddy.x=rmx;
        objFreddy.y=rmy;
        ctrlGame.rmindex=rmindex;
        //audio_play_sound(snddooropen Sound missing!
        instance_deactivate_object(objFreddy);
        alarm[0]=room_speed/2;
    }
    move=0;
    tped=1;
}
moved=0;
if move {
    moved=1;
    if !talking &amp;&amp; !tped {
        udlri=4;
        if keyboard_check(vk_shift) {
            mspeed=dspeed*2;
        } else {
            mspeed=dspeed;
        }
        if keyboard_check(vk_up) {
            udlri=0;
            if place_free(x,y-32) {
                if onstage {
                    if !instance_position(x,y-32,objWall1) {
                        move=0;
                    }
                } else {
                    if !instance_position(x,y-32,objWall2) {
                        move=0;
                    }
                }
            }
        }
        if keyboard_check(vk_down)&amp;&amp;move {
            udlri=1;
            if place_free(x,y+32) {
                if onstage {
                    if !instance_position(x,y+32,objWall1) {
                        move=0;
                    }
                } else {
                    if !instance_position(x,y+32,objWall2) {
                        move=0;
                    }
                }
            }
        }
        if keyboard_check(vk_left)&amp;&amp;move {
            udlri=2;
            if place_free(x-32,y) {
                if onstage {
                    if !instance_position(x-32,y,objWall1) {
                        move=0;
                    }
                } else {
                    if !instance_position(x-32,y,objWall2) {
                        move=0;
                    }
                }
            }
        }
        if keyboard_check(vk_right)&amp;&amp;move {
            udlri=3;
            if place_free(x+32,y) {
                if onstage {
                    if !instance_position(x+32,y,objWall1) {
                        move=0;
                    }
                } else {
                    if !instance_position(x+32,y,objWall2) {
                        move=0;
                    }
                }
            }
        }
        if udlri!=4 {
            pudlr=udlri;
        }
    }
} else {
    switch udlri {
        case 0:
            y-=mspeed;
        break;
        case 1:
            y+=mspeed;
        break;
        case 2:
            x-=mspeed;
        break;
        case 3:
            x+=mspeed;
        break;
    }
    if place_snapped(32,32) {
        move=1;
        if instance_position(x,y,objStairs) {
            onstage=!onstage;
            if onstage {
                ctrlGame.rmindex=9;
            } else {
                ctrlGame.rmindex=4;
            }
        }
    }
}
if moved&amp;&amp;!move {
    steps++;
    if steps mod 30 == 0 {
        //Freddy is under attack!
        transattack=1;
        anim=0;
        audio_pause_sound(bgmambience2);
        audio_play_sound(sndanimatronicatdoor,99,0);
        //play sound oh shit
    }
}
if tped &amp;&amp; udlri!=4 {
    tped=0;
}

animatePlayer(udlri,mspeed);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Overcomplicated dialouge script
if say!="0" {
    if saydelay&gt;0 {
        saydelay--;
    } else {
        audio_play_sound(sndfreddy[real(say)],99,0);
        ini_open(working_directory+global.lang+".ini");
        if ini_read_string("freddy",say,"ERR: STRING UNDEFINED!")!="-1" {
            dialouge(ini_read_string("freddy",say,"ERR: STRING UNDEFINED!"),0,0);
        }
        ini_close();
        say="0";
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transitions
if transattack {
    if anim&lt;1 {
        anim+=0.01;
        //Prevent player from moving somehow.
    } else {
        anim=0;
        transattack=0;
        rmpower=ctrlGame.rmpower;
        with(ctrlTouch) instance_destroy();
        ctrlGame.setchk=2;
        instance_deactivate_all(0);
        instance_activate_object(ctrlMaster);
        with instance_create(0,0,ctrlBattle) {
            //Initialize settings for battle
            rmpower=other.rmpower;
            onstage=other.onstage;
            players=1;
            name[0]="Freddy";
            hth[0]=other.hth;
            mxhth[0]=other.mxhth;
            skl[0]=other.skl;
            mxskl[0]=other.mxskl;
            tec[0]=floor(random_range(0,15*abs(global.gamemode-3)));
            mxtec[0]=100;
            atk[0]=other.atk;
            def[0]=other.def;
            eff[0]=other.eff;
            lvl[0]=other.lvl;
            xp[0]=other.xp;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ridiculous talking script
if talking {
    if !instance_exists(objDialouge) {
        talking=0;
        if audio_is_playing(sndfreddy[real(say)]) {
            audio_stop_sound(sndfreddy[real(say)]);
        }
    }
} else if move {
    switch pudlr {
        //Check for any objects to talk about in direction freddy is facing.
        case 0:
            if instance_position(x,y-32,objtalk)!=noone {
                with instance_position(x,y-32,objtalk) {
                    objFreddy.say=say;
                    objFreddy.saydelay=saydelay;
                }
                talking=1;
            }
        break;
        case 1:
            if instance_position(x,y+32,objtalk)!=noone {
                with instance_position(x,y+32,objtalk) {
                    objFreddy.say=say;
                    objFreddy.saydelay=saydelay;
                }
                talking=1;
            }
        break;
        case 2:
            if instance_position(x-32,y,objtalk)!=noone {
                with instance_position(x-32,y,objtalk) {
                    objFreddy.say=say;
                    objFreddy.saydelay=saydelay;
                }
                talking=1;
            }
        break;
        case 3:
            if instance_position(x+32,y,objtalk)!=noone {
                with instance_position(x+32,y,objtalk) {
                    objFreddy.say=say;
                    objFreddy.saydelay=saydelay;
                }
                talking=1;
            }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
