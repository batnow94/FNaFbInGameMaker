<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a battle and add players
audio_pause_all();
avatar=-1;
done=0;
trans=0;

players=0;
enemies=0;
rmpower=0;

//"Party hat appeared!"
alarm[0]=1;

x=0; y=320;
option[0]=0;
    option[1]=0;
        option[2]=0;
            option[3]=0;
            option[4]=0;
options[0]=2;
    options[1]=0;
        options[2]=4;
            options[3]=0;
            options[4]=0;
otext[0,0]="Engage";
    //Level 1 is players
        otext[2,0]="Scream";
            //Level 3 is Enemies
        otext[2,1]="Skills";
            //Level 4 is Skills
        otext[2,2]="Guard";
        otext[2,3]="&lt;- Return";
otext[0,1]="Run";

fade=1;
fadeinout=1;
level=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_resume_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup to be done after creator has set variables
//"Party hat appeared"
hpower="Unoun";
switch rmpower {
    case 0:
        hpower="Alpha";
        audio_play_sound(bgm181,90,1);
    break;
    case 1:
        hpower="Beta";
        audio_play_sound(bgm181,90,1);
    break;
    case 2:
        hpower="Gamma";
        audio_play_sound(bgmOFFOST4,90,1);
    break;
    case 3:
        hpower="Omega";
        audio_play_sound(bgmOFFOST4,90,1);
    break;
}
dialouge(hpower+" Party Hat appeared!",0,0);
ask=1;
options[1]=players;
options[3]=enemies;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse controls
if global.usemouse {
    if mouse_check_button_pressed(mb_left) {
        if level==0 {
            if mouse_y&gt;y+16+(option[0]*24)&amp;&amp;mouse_y&lt;y+16+((option[0]+1)*24) {
                event_perform(ev_keypress,vk_enter);
            }
        } else if level==1 {
            if mouse_y&lt;y+16+(option[1]*24)&amp;&amp;mouse_y&lt;y+16+((option[1]+1)*24) {
                event_perform(ev_keypress,vk_enter);
            }
        }
    }
    var i=0;
    if level==0 {
        repeat(options[0]) {
            if depth==0&amp;&amp;mouse_x&lt;144&amp;&amp;mouse_y&gt;y+16+(i*24)&amp;&amp;mouse_y&lt;y+16+((i+1)*24) {
                if option[0]!=i {
                    option[0]=i;
                    audio_play_sound(sndblip3,90,0);
                }
            }
            i++;
        }
    } else if level==1 {
        repeat(options[1]) {
            if depth==0&amp;&amp;mouse_x&gt;144&amp;&amp;mouse_y&gt;y+16+(i*24)&amp;&amp;mouse_y&lt;y+16+((i+1)*24) {
                if option[1]!=i {
                    option[1]=i;
                    audio_play_sound(sndblip3,90,0);
                }
            }
            i++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard controls
if keyboard_check_pressed(vk_escape)||keyboard_check_pressed(vk_backspace) {
    if level&gt;0 {
        audio_play_sound(sndwindup2,90,0);
        level--;
    } else {
        audio_play_sound(snderror,90,0);
    }
}
if keyboard_check_pressed(vk_up) {
    if option[level]&gt;=1 {
        option[level]--;
    } else {
        option[level]=options[level]-1;
    }
    audio_play_sound(sndblip3,90,0);
}
if keyboard_check_pressed(vk_down) {
    option[level]++;
    if option[level]&gt;=options[level] {
        option[level]=0;
    }
    audio_play_sound(sndblip3,90,0);
}
if ask&amp;&amp;!instance_exists(objDialouge) {
    ask=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transitions
if done&amp;&amp;!ask {
    if trans&lt;1 {
        trans+=0.05;
    } else {
        switch rmpower {
            case 0:
                audio_stop_sound(bgm181);
            break;
            case 1:
                audio_stop_sound(bgm181);
            break;
            case 2:
                audio_stop_sound(bgmOFFOST4);
            break;
            case 3:
                audio_stop_sound(bgmOFFOST4);
            break;
        }
    instance_activate_all();
    with objFreddy {
        //Give Freddy his new stats
    }
    instance_destroy();
    }
}
//Move x
if level&lt;=1&amp;&amp;x&lt;0 x+=8;
else if level&gt;=2&amp;&amp;x&gt;-152 x-=8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu
if fade==0.5 { fadeinout=0; }
if fade==1 {fadeinout=1; }
if fadeinout==1 { fade=fade-0.05; }
if fadeinout==0 { fade=fade+0.05; }
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_font(fntMain);
draw_set_alpha(1);

//Draw room bg
switch room {
    case rmStage:
        if onstage {
            draw_background(Stage,0,0);
        } else {
            draw_background(MainHall,0,0);
        }
    break;
    case rmBackroom:
        draw_background(Backroom,0,0);
    break;
    case rmPirateCove:
        draw_background(PirateCove,0,0);
    break;
    case rmBathroom:
        draw_background(Bathroom,0,0);
    break;
    case rmWestHall:
        draw_background(WestHall,0,0);
    break;
    case rmEastHall:
        draw_background(EastHall,0,0);
    break;
    case rmWestHallCorner:
        draw_background(choose(WestCorner,WestCorner2),0,0);
    break;
    case rmEastHallCorner:
        draw_background(EastCorner,0,0);
    break;
    case rmCloset:
        draw_background(Closet,0,0);
    break;
}

draw_sprite(sprDialouge,0,x,y+48);
var i=0;
repeat(options[0]) {
    draw_text(x+16,y+8+i*20,otext[0,i]);
    if option[0]==i&amp;&amp;level==0 {
        draw_set_alpha(fade);
        draw_line(x+16,y+i*20+24,x+128,y+i*20+24);
        draw_set_alpha(1);
    }
    i++;
}
i=0;
if level&gt;=1 {
    if level==1 draw_set_alpha(0.2);
    else draw_set_alpha(0.5);
    draw_rectangle(x+544,y,x+696,416,0);
    draw_set_alpha(1);
    if level==2 {
        repeat(options[2]) {
            draw_text(x+560,y+8+i*20,otext[2,i]);
            if option[2]==i {
                draw_set_alpha(fade);
                draw_line(x+560,y+i*20+24,x+688,y+i*20+24);
                draw_set_alpha(1);
            }
            i++;
        }
    }
}
i=0;
repeat(players) {
    if level==1&amp;&amp;option[1]==i {
        draw_set_colour(c_white);
        draw_set_alpha(fade);
        draw_line(x+160,y+i*20+24,x+526,y+i*20+24);
        draw_set_alpha(1);
    }
    if level&gt;&gt;1 {
        draw_set_colour(c_white);
        draw_set_alpha(0.5);
        draw_rectangle(x+160,y+6+i*20,x+543,y+i*20+24,0);
        draw_set_alpha(1);
    }
    draw_text(x+160,y+8+i*20,name[i]);
    draw_set_colour(c_white);
    draw_set_halign(fa_right);
    draw_rectangle_colour(x+306,y+8+i*20,x+306+(hth[i]/mxhth[i])*74,y+22+i*20,make_colour_rgb(211,84,0),make_colour_rgb(211,84,0),make_colour_rgb(243,156,18),make_colour_rgb(243,156,18),0);
    draw_text(x+380,y+8+i*20,string(hth[i]));
    draw_set_colour(c_blue);
    draw_set_halign(fa_left);
    draw_text_transformed(x+306,y+8+i*20,"LIFE",0.6,0.9,0);
    draw_set_colour(c_white);
    draw_set_halign(fa_right);
    draw_rectangle_colour(x+390,y+8+i*20,x+390+(skl[i]/mxskl[i])*66,y+22+i*20,make_colour_rgb(41,128,185),make_colour_rgb(41,128,185),make_colour_rgb(52,152,219),make_colour_rgb(52,152,219),0);
    draw_text(x+456,y+8+i*20,string(skl[i]));
    draw_set_colour(c_blue);
    draw_set_halign(fa_left);
    draw_text_transformed(x+390,y+8+i*20,"SKILL",0.6,0.9,0);
    draw_set_colour(c_white);
    draw_set_halign(fa_right);
    draw_rectangle_colour(x+464,y+8+i*20,x+464+(tec[i]/mxtec[i])*62,y+22+i*20,make_colour_rgb(64,214,74),make_colour_rgb(64,214,74),make_colour_rgb(61,245,73),make_colour_rgb(61,245,73),0);
    draw_text(x+526,y+8+i*20,string(tec[i]));
    draw_set_colour(c_blue);
    draw_set_halign(fa_left);
    draw_text_transformed(x+464,y+8+i*20,"TECH",0.6,0.9,0);
    i++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do a thing
if !ask {
    audio_play_sound(sndpop,90,0);
    if level==0 {
        switch option[0] {
            case 0:
                level++;
            break;
            case 1:
                done=choose(1,0);
                if done dialouge("Trying to escape...                    #Freddy and co. have escaped!",0,0);
                else dialouge("Trying to escape...                    #But it failed!",0,0);
                ask=1;
            break;
        }
    } else if level==1 {
        level++;
    } else if level==2 {
        switch option[2] {
            case 3:
                level--;
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
