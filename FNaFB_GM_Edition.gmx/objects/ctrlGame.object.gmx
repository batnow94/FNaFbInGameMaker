<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load Game and Go to appropriate room
show_debug_message("Starting game...");
newgame=0;
gametime=0;
rmpower=0;
rmindex=9;
setchk=0;

if global.saveslot&gt;0 {
    if global.saveslot&gt;=5 {
        //loadGame(working_directory+"temp.fnafb");
        show_debug_message("Recovered game from last session!");
    } else {
        //loadGame(working_directory+"slot"+string(global.saveslot)+".fnafb");
        show_debug_message("Loaded game in slot "+string(global.saveslot)+"!");
    }
} else {
    //Start game from start.
    newgame=1;
    fade=0;
    fadeinout=0;
    fadedelay=room_speed*2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Game and Clean up
global.ingame=0;
global.saveslot=-1;

//Delete recovery files
file_delete(working_directory+"recover.ini");
file_delete(working_directory+"temp.fnafb");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save a backup of the game in case it crashes
alarm[0]=room_speed*20*(-global.graphics+3);
saveGame(working_directory+"temp.fnafb");
ini_open(working_directory+"recover.ini");
ini_write_real("meta","exists",1);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transition and pause the game
if setchk==1 {
    if global.touch {
        instance_create(0,0,ctrlTouch);
    } else {
        if instance_exists(ctrlTouch) {
            with(ctrlTouch) {
                instance_destroy();
            }
        }
    }
    setchk=0;
} else {
    setchk--;
}
if newgame {
    if fadeinout {
        if fade&gt;0 {
            fade-=0.05;
        } else {
            //Start new game
            room_goto(rmStage);
            audio_play_sound(bgmambience2,100,1);
            instance_create(256,96,objFreddy);
            global.ingame=1;
            alarm[0]=room_speed*20*(-global.graphics+3);
            newgame=0;
            //Add touch controls if neccesary
            if global.touch {
                instance_create(0,0,ctrlTouch);
            }
        }
    } else {
        if fade&lt;1 {
           fade+=0.05;
        } else {
            fadedelay--;
            if keyboard_check_pressed(vk_enter)||mouse_check_button(mb_left)||fadedelay&lt;1 {
               audio_play_sound(sndpop,90,0);
               fadeinout=1;
            }
        }
    }
}
if global.ingame {
    if keyboard_check_pressed(vk_escape)||keyboard_check_pressed(vk_backspace) {
        //Pause game and open pause menu
        if instance_exists(ctrlTouch) {
            with(ctrlTouch) {
                instance_destroy();
            }
        }
        instance_deactivate_all(0);
        setchk=2;
        instance_activate_object(ctrlMaster);
        //screen_save(temp_directory+"pause.png");
        with (instance_create(0,0,ctrlPause)) {
            //sprpause=sprite_add(temp_directory+"pause.png",1,0,0,0,0);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw game gui
if !newgame {
    draw_set_alpha(0.2);
    draw_set_colour(c_black);
    draw_set_halign(fa_left);
    draw_rectangle(0,0,544,416,0);
    if global.graphics&gt;0 { draw_sprite_stretched(sprStatic,-1,0,0,544,416); }
    draw_background_tiled(bgScanlines,0,0);
    draw_set_alpha(1);
    draw_sprite_ext(sprOverlay,0,6,6,1,1,0,c_white,1);
    draw_sprite_ext(sprOverlay,0,538,6,1,1,270,c_white,1);
    draw_sprite_ext(sprOverlay,0,538,410,1,1,180,c_white,1);
    draw_sprite_ext(sprOverlay,0,6,410,1,1,90,c_white,1);
    draw_set_colour(c_white);
    draw_set_halign(fa_center);
    draw_text(272,400,"Power");
    draw_set_halign(fa_left);
    draw_sprite(sprMap,rmindex,544,416);
    draw_sprite(sprPowerBar,rmpower,272,384);
    draw_sprite(sprRec,0,0,416);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw git gud and join today poster
if fade&gt;0 {
    draw_set_alpha(1);
    draw_set_colour(c_black);
    draw_rectangle(0,0,544,416,0);
    draw_set_alpha(fade);
    draw_sprite(seqNews,0,0,0);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
