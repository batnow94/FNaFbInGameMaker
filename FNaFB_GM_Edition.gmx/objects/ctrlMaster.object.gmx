<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center the window in screen if nessecary
window_center();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///[EXPERIMENTAL] Disable surfaces aspect ratio workaround
view_wview[0] = 544;
view_hview[0] = 416;
view_wport[0] = 544;
view_hport[0] = 416;
//view_xport[0] = (window_get_width()-view_wport[0])/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Respond to dialouge change
if ask {
    if input!=-1 {
        if asktouch {
            touch=!input;
            input=-1;
            ask=0;
        }
        if askrecover {
            if global.input==0 {
                saveslot=5;
                ingame=1;
                instance_create(0,0,ctrlGame);
            } else {
                file_delete(working_directory+"temp.fnafb");
                file_delete(working_directory+"temp.fnafb.meta");
            }
            input=-1;
            ask=0;
        }
    }
}
if room==rmInit&amp;&amp;(keyboard_check(vk_enter)||mouse_check_button(mb_left)) {
    if logo&lt;100 logo=100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///[EXPERIMENTAL] Disable surfaces aspect ratio workaround
view_wview[0] = 544;
view_hview[0] = 416;
view_wport[0] = 544;
view_hport[0] = 416;
//view_xport[0] = (window_get_width()-view_wport[0])/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize globalvars and load settings
/* Debugging zone */
//show_debug_overlay(1); //Benchmarking performance

application_surface_draw_enable(false);
randomize();
globalvar input,ask,gamemode,copyright,saveslot,graphics,touch,ingame,nighttime,scale,lang,legacy,usemouse;
input=-1;
ask=0;
copyright=0;
gamemode=0;
saveslot=-1;
ingame=0;
nighttime=1;
lang="en";
legacy=0;

//logo animation
logo=0;

ask=0;
asktouch=0;
askrecover=0;

//[EXPERIMENTAL] Performance boost - Disable surfaces - breaks when changing window scale
//application_surface_enable(0);

//Load settings
ini_open(working_directory+"settings.ini")
scale=ini_read_real("main","windowsize",1);
graphics=ini_read_real("main","graphics",1);
window_set_fullscreen(ini_read_real("main","fullscreen",0));
touch=ini_read_real("main","touch",-1);
usemouse=ini_read_real("main","usemouse",1);
ini_close();

if !usemouse touchctrl(0);

//Set language if possible
lang=string_lower(os_get_language());
if lang!="en" {
    if string_length(lang)!=2 {
        show_debug_message("Language provided in invalid format ("+lang+")! Resorted to en.");
        lang="en";
    } else if file_exists(working_directory+lang+".ini") {
        show_debug_message("Language set to "+lang+"!");
    } else {
        show_debug_message("No language file available for "+lang+", translators, get on to it!");
        lang="en";
    }
}

//Check if player is using a touchscreen
if touch==-1 {
    if os_type==os_android||os_type==os_ios||os_type==os_tizen||os_type==os_winphone {
        //This is definitely a touch screen
        touch=1;
    } else if os_type==os_win8native||os_type==os_unknown||os_type==os_browser {
        //This might be a touch screen, let's ask to be sure
        touch=1;
        ask=1;
        asktouch=1;
        dialouge("Is this device a touchscreen?",1,2,"yes","no");
    }
}

//Make game fit in screen
if 544*scale&lt;display_get_width()&amp;&amp;416*scale&lt;display_get_height() {
    window_set_size(544*scale,416*scale);
} else {
    scale=1;
    window_set_size(544*scale,416*scale);
}
display_set_gui_size(544*scale,416*scale);
alarm[0]=1;

//Check if we can restore a game that was never exited
if file_exists(working_directory+"temp.fnafb") {
    ask=1;
    askrecover=1;
    dialouge("Autosave found!#Would you like to resume your previous game?",1,2,"Yes","No")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw application_surface with shaders
if ingame&amp;&amp;graphics&gt;0&amp;&amp;nighttime shader_set(shdNight);
draw_surface(application_surface,0,0);
if ingame&amp;&amp;graphics&gt;0&amp;&amp;nighttime shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw logo and go to rminit
if room==rmInit {
    draw_set_alpha(1);
    draw_set_colour(c_white);
    draw_set_font(fntHeader);
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    if !ask {
        logo++;
    }
    if logo&lt;60 {
        draw_sprite(sprLogo,-1,272-(sprite_get_width(sprLogo)/2),208-(sprite_get_height(sprLogo)/2));
    } else if logo&lt;100 {
        draw_sprite(sprLogo,-1,272-(sprite_get_width(sprLogo)/2),208-(sprite_get_height(sprLogo)/2)-(logo-60)/2);
        draw_set_alpha((logo-60)/40);
        draw_text(272,200+(sprite_get_height(sprLogo)/2),"Twisted Fork");
    } else {
        draw_sprite(sprLogo,-1,272-(sprite_get_width(sprLogo)/2),208-(sprite_get_height(sprLogo)/2)-20);
        draw_set_alpha(1);
        draw_text(272,200+(sprite_get_height(sprLogo)/2),"Twisted Fork");
    }
    if !ask&amp;&amp;logo&gt;=140 {
        ini_open(working_directory+"settings.ini") {
            ini_write_real("main","touch",touch);
            ini_close();
        }
        room_goto(rmIntro);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
